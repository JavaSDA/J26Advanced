// 25 mins
Create a class called person:
- firstName
- lastName
- age

Encapsulate the person class such that once an
instance of it is created it cannot be changed but
values can be read from it.

Create another class called Employee:
- occupation
- employeeId

Ensure that the Employee class is a child class
to the Person class.


// 30 mins
Create an abstract class called Shape, and give it two abstract methods:
- getArea
- getPerimeter

Create 3 subclasses from the Shape class respectively: Circle, Square and Rectangle

Use a class with a main method to demonstrate the abstraction between shape and its child classes
as well as the operations of the getArea and getPerimeter methods.



// 30 mins
- Create an abstract class called Account add the following properties:
  - balance (double)
  - accountNumber (string)

  behaviours:
  - deposit()
  - withdraw()
  - getBalance()
  - getAccountNo()

 - Create 2 classes called Checking account and Savings Account.

 The savings account comes with the following extra features:
    - interestRate

   additional behaviour:
    - setInterestRate